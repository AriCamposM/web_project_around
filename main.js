!function(){"use strict";function e(t){return e="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},e(t)}function t(e,t){for(var r=0;r<t.length;r++){var o=t[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,n(o.key),o)}}function n(t){var n=function(t){if("object"!=e(t)||!t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!=e(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"==e(n)?n:n+""}var r=function(){return e=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],o=arguments.length>3?arguments[3]:void 0,i=arguments.length>4?arguments[4]:void 0,a=arguments.length>5?arguments[5]:void 0,u=arguments.length>6?arguments[6]:void 0,c=arguments.length>7?arguments[7]:void 0,l=arguments.length>8?arguments[8]:void 0,s=arguments.length>9?arguments[9]:void 0;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._text=t,this._imageLink=n,this._templateSelector=u,this._handleCardClick=c,this._likes=r,this._ownerId=o,this._userId=i,this._cardId=a,this._handleConfirm=l,this._api=s,this._element=this._getTemplate(),this._setEventListeners(),this._verifyCardOwner(),this._updateLikesCount(),this._setLikeStatus()},(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.cloneNode(!0).children[0]}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".element__button").addEventListener("click",(function(){return e._handleLikeButton()})),this._element.querySelector(".element__trash").addEventListener("click",(function(){return e._handleConfirm(e._cardId)})),this._element.querySelector(".element__image").addEventListener("click",(function(){return e._handleCardClick(e._imageLink,e._text)}))}},{key:"_handleLikeButton",value:function(){var e=this,t=this._element.querySelector(".element__button");t.classList.contains("active")?this._api.removeLike(this._cardId).then((function(n){e._likes=n.likes,e._updateLikesCount(),t.classList.remove("active")})).catch((function(e){return console.error("Error al eliminar el like: ".concat(e))})):this._api.addLike(this._cardId).then((function(n){e._likes=n.likes,e._updateLikesCount(),t.classList.add("active")})).catch((function(e){return console.error("Error al a√±adir el like: ".concat(e))}))}},{key:"_updateLikesCount",value:function(){this._element.querySelector(".element__likes-count").textContent=this._likes.length}},{key:"_setLikeStatus",value:function(){var e=this,t=this._element.querySelector(".element__button");this._likes.some((function(t){return t._id===e._userId}))&&t.classList.add("active")}},{key:"_verifyCardOwner",value:function(){this._ownerId!==this._userId&&(this._element.querySelector(".element__trash").style.display="none")}},{key:"getCardElement",value:function(){return this._element.querySelector(".element__image").src=this._imageLink,this._element.querySelector(".element__image").alt=this._text,this._element.querySelector(".element__text").textContent=this._text,this._element.setAttribute("data-id",this._cardId),this._updateLikesCount(),this._element}}])&&t(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,n}(),o=r;function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function a(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,u(r.key),r)}}function u(e){var t=function(e){if("object"!=i(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=i(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==i(t)?t:t+""}var c=function(){return e=function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._items=r,this._renderer=o,this._container=document.querySelector(n)},(t=[{key:"renderItems",value:function(){var e=this;this._items.forEach((function(t){e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.append(e)}}])&&a(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,f(r.key),r)}}function f(e){var t=function(e){if("object"!=l(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=l(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==l(t)?t:t+""}var p=function(){return e=function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this)},(t=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),this._popup.classList.add("viewer_opened"),this._popup.classList.add("confirm_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),this._popup.classList.remove("viewer_opened"),this._popup.classList.remove("confirm_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__close-button")||t.target===e._popup)&&e.close()}))}}])&&s(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function y(e){return y="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},y(e)}function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,h(r.key),r)}}function h(e){var t=function(e){if("object"!=y(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=y(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==y(t)?t:t+""}function m(e,t,n){return t=S(t),function(e,t){if(t&&("object"==y(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,v()?Reflect.construct(t,n||[],S(e).constructor):t.apply(e,n))}function v(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(v=function(){return!!e})()}function _(e,t,n,r){var o=b(S(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(null,arguments)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}function g(e,t){return g=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},g(e,t)}var w=function(e){function t(e){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(n=m(this,t,[e]))._imageElement=n._popup.querySelector(".viewer__image"),n._captionElement=n._popup.querySelector(".viewer__text"),n._closeButton=n._popup.querySelector(".viewer__close"),n}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(t,e),n=t,(r=[{key:"open",value:function(e,n){this._imageElement.src=e,this._imageElement.alt=n,this._captionElement.textContent=n,_(t,"open",this,3)([])}},{key:"setEventListeners",value:function(){var e=this;_(t,"setEventListeners",this,3)([]),this._closeButton.addEventListener("click",(function(){e.close()}))}}])&&d(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,j(r.key),r)}}function j(e){var t=function(e){if("object"!=E(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=E(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==E(t)?t:t+""}function C(e,t,n){return t=q(t),function(e,t){if(t&&("object"==E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,O()?Reflect.construct(t,n||[],q(e).constructor):t.apply(e,n))}function O(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return(O=function(){return!!e})()}function L(e,t,n,r){var o=P(q(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(null,arguments)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}function I(e,t){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},I(e,t)}var T=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=C(this,t,[e]))._handleFormSubmit=n,r._form=r._popup.querySelector(".popup__form"),r._inputList=r._form.querySelectorAll(".popup__input"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&I(e,t)}(t,e),n=t,(r=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;L(t,"setEventListeners",this,3)([]),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){L(t,"close",this,3)([]),this._form.reset()}}])&&k(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,U(r.key),r)}}function U(e){var t=function(e){if("object"!=R(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=R(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==R(t)?t:t+""}var B=function(){return e=function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._formElement=t,this._config=n,this._inputList=Array.from(this._formElement.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._formElement.querySelector(this._config.submitButtonSelector)},(t=[{key:"_showInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._config.errorClass)}},{key:"_hideInputError",value:function(e){var t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.textContent="",t.classList.remove(this._config.errorClass)}},{key:"_checkInputValidity",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?(this._buttonElement.disabled=!0,this._buttonElement.classList.add(this._config.inactiveButtonClass)):(this._buttonElement.disabled=!1,this._buttonElement.classList.remove(this._config.inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e=this;this._toggleButtonState(),this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._checkInputValidity(t),e._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._formElement.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&x(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}(),A=document.querySelector(".profile__button-edit"),D=document.querySelector(".elements"),V=document.querySelector(".profile__button-add"),N=document.querySelector(".profile__edit-icon");function G(e){return G="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},G(e)}function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,z(r.key),r)}}function z(e){var t=function(e){if("object"!=G(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=G(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==G(t)?t:t+""}var F=function(){return e=function e(t){var n=t.name,r=t.about,o=t.avatar;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o},(t=[{key:"getUserInfo",value:function(){return{name:this._name.textContent,about:this._about.textContent}}},{key:"setUserInfo",value:function(e){var t=e.name,n=e.about,r=e.avatar;this._name.textContent=t,this._about.textContent=n,r&&(this._avatar.src=r)}},{key:"setUserAvatar",value:function(e){this._avatar.src=e}}])&&J(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function H(e){return H="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},H(e)}function M(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,K(r.key),r)}}function K(e){var t=function(e){if("object"!=H(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=H(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==H(t)?t:t+""}var Q=function(){return e=function e(t){var n=t.baseUrl,r=t.headers;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._baseUrl=n,this._headers=r},(t=[{key:"_handleResponse",value:function(e){return e.ok?e.json():Promise.reject("Error:".concat(e.status))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._baseUrl,"/users/me"),{headers:this._headers}).then(this._handleResponse)}},{key:"getInitialCards",value:function(){return fetch("".concat(this._baseUrl,"/cards"),{headers:this._headers}).then(this._handleResponse)}},{key:"updateUserInfo",value:function(e){var t=e.name,n=e.about;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:n})}).then(this._handleResponse)}},{key:"addNewCard",value:function(e){var t=e.name,n=e.link;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:n})}).then(this._handleResponse)}},{key:"deleteCard",value:function(e){return fetch("".concat(this._baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}},{key:"updateAvatar",value:function(e){return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}},{key:"addLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this._headers}).then(this._handleResponse)}},{key:"removeLike",value:function(e){return fetch("".concat(this._baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this._headers}).then(this._handleResponse)}}])&&M(e.prototype,t),Object.defineProperty(e,"prototype",{writable:!1}),e;var e,t}();function W(e){return W="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},W(e)}function X(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,Y(r.key),r)}}function Y(e){var t=function(e){if("object"!=W(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=W(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==W(t)?t:t+""}function Z(e,t,n){return t=ne(t),function(e,t){if(t&&("object"==W(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}(e,$()?Reflect.construct(t,n||[],ne(e).constructor):t.apply(e,n))}function $(){try{var e=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){})))}catch(e){}return($=function(){return!!e})()}function ee(e,t,n,r){var o=te(ne(1&r?e.prototype:e),t,n);return 2&r?function(e){return o.apply(n,e)}:o}function te(){return te="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=function(e,t){for(;!{}.hasOwnProperty.call(e,t)&&null!==(e=ne(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},te.apply(null,arguments)}function ne(e){return ne=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},ne(e)}function re(e,t){return re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},re(e,t)}var oe=function(e){function t(e,n){var r;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),(r=Z(this,t,[e]))._handleConfirm=n,r._form=r._popup.querySelector(".confirm__form"),r._closeButton=r._popup.querySelector(".confirm__close-button"),r}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&re(e,t)}(t,e),n=t,(r=[{key:"setEventListeners",value:function(){var e=this;ee(t,"setEventListeners",this,3)([]),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleConfirm(e._cardId)})),this._closeButton.addEventListener("click",(function(){e.close()}))}},{key:"open",value:function(e){this._cardId=e,ee(t,"open",this,3)([])}},{key:"close",value:function(){ee(t,"close",this,3)([]),this._cardId=null}}])&&X(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),n;var n,r}(p),ie=null,ae=function(e){return new o(e.name,e.link,e.likes,e.owner._id,ie,e._id,".element__template",(function(e,t){ce.open(e,t)}),(function(e){pe.open(e),console.log("Si funciona el icono de trash en createcard")}),le)},ue=function(e){Array.from(document.querySelectorAll(e.formSelector)).forEach((function(t){new B(t,e).enableValidation()}))};ue({formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"}),ue({formSelector:".post__form",inputSelector:".post__input",submitButtonSelector:".post__button",inactiveButtonClass:"post__button_disabled",inputErrorClass:"post__input_type_error",errorClass:"post__error_visible"}),V.addEventListener("click",(function(){fe.open()})),A.addEventListener("click",(function(){se.open()})),N.addEventListener("click",(function(){ye.open()}));var ce=new w(".viewer");ce.setEventListeners();var le=new Q({baseUrl:"https://around.nomoreparties.co/v1/web_es_10",headers:{authorization:"92699bb5-75ce-4d70-95e1-51dbc7b5449b","Content-Type":"application/json"}});le.getUserInfo().then((function(e){console.log(e),ie=e._id,new F({name:document.querySelector(".profile__title"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__image")}).setUserInfo({name:e.name,about:e.about,avatar:e.avatar})})).catch((function(e){return console.error("Error al cargar el perfil: ".concat(e))})),le.getInitialCards().then((function(e){console.log(e);var t=new c({items:e,renderer:function(e){var n=ae(e);t.addItem(n.getCardElement())}},".elements");t.renderItems()})).catch((function(e){return console.error("Error al cargar las tarjetas: ".concat(e))}));var se=new T("#popup-profile",(function(e){console.log(e);var t=document.querySelector("#popup__button-profile");t.textContent="Guardando...",le.updateUserInfo({name:e.name,about:e.about}).then((function(){return le.getUserInfo()})).then((function(e){console.log(e),ie=e._id;var t=new F({name:document.querySelector(".profile__title"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__image")});se.close(),t.setUserInfo({name:e.name,about:e.about})})).catch((function(e){return console.error("Error al actualizar el perfil: ".concat(e))})).finally((function(){se.close(),t.textContent="Guardar",t.disabled=!1}))}));se.setEventListeners();var fe=new T("#popup-cards",(function(e){console.log(e);var t=document.querySelector("#popup__button-cards");t.textContent="Creando...",le.addNewCard({name:e.name,link:e.link}).then((function(e){var t=ae(e);D.prepend(t.getCardElement())})).catch((function(e){return console.error("Error al a√±adir la tarjeta: ".concat(e))})).finally((function(){t.textContent="Crear",t.disabled=!1,fe.close()}))}));fe.setEventListeners();var pe=new oe("#popup-confirmation",(function(e){var t=document.querySelector("#confirm__button-delete");t.textContent="Eliminando Tarjeta...",le.deleteCard(e).then((function(){var t=document.querySelector('[data-id="'.concat(e,'"]'));t?t.remove():console.error('No se encontr√≥ el elemento con data-id="'.concat(e,'"'))})).catch((function(e){return console.error("Error al eliminar la tarjeta: ".concat(e))})).finally((function(){t.textContent="S√≠",t.disabled=!1,pe.close()}))}));pe.setEventListeners();var ye=new T("#popup-avatar",(function(e){console.log(e),console.log("funciona el submit");var t=document.querySelector("#popup__button-avatar");t.textContent="Guardando...",le.updateAvatar(e.avatar).then((function(e){new F({name:document.querySelector(".profile__title"),about:document.querySelector(".profile__about"),avatar:document.querySelector(".profile__image")}).setUserAvatar(e.avatar)})).catch((function(e){console.error("Error updating avatar: ".concat(e))})).finally((function(){t.textContent="Guardar",t.disabled=!1,ye.close()}))}));ye.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,